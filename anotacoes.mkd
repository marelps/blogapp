Cria o package.json
``npm init -y``

Depois instala as dependências:
Inicia o projeto instalando o express
``npm install --save express``

Instalação do handlebars
``npm instal --save express-handlebars``

Não é necessário instalar o body-parser, pois foi descontinuado

Depois:
``npm install --save mongoose``

E depois já adiantando nodemon
``npm install --save nodemon``

No arquivo package.json, é preciso adicionar:
Logo nas primeiras linhas, abaixo de name, version, description e main
adicionar:
``"type": "module",``


 - Uma boa prática para o projeto: sempre criar projetos em inglês

**O que é Slug?** Basicamente é a url para chegar a determinada categoria, por exemplo:
{nomedosite.com.br}/categorias/*marketing*
{nomedosite.com.br}/categorias/*estudos*
O slug não pode conter caracter especial, letra maiúscula, espaço. No nome da categoria pode existir, por exemplo:
Categoria: Desenvolvimento Web
Slug: {nomedosite.com.br}/categorias/*desenvolvimento-web*


## Algumas anotações em relação ao ``MongoDB``
- ``show dbs;``
  - No vídeo ele utiliza outro comando para visualizar os bancos, enquanto na nova versão utiliza esse mencionado acima;
- ``use blogapp``
  - Para selecionar determinado banco de dados
- ``show collections;``
  - Para mostrar as tabelas do banco de dados
- ``db.categorias.find()``
  - O nome categorias se refere a tabela criada no projeto, mas pode variar de acorod com o projeto que for criado, esse código seria para mostrar os conteúdos que contém nessa tabela, em específico nesse exemplo, na tabela ``categorias``
- Para o banco de dados funcionar o tempo todo, é necessário que o cmd ou terminal esteja aberto durante todo o período de utilização.

## Cookies
É um arquivo de texto muito simples, cuja composição depende diretamente do conteúdo do endereço Web visitado. Por exemplo, a maioria do sites armazenam informações básicas, como endereços IP e preferência sobre idiomas, cores, etc. Contudo, em portais como Gmail e o Hotmail, noems de usuários e senhas de email também fazem parte dos Cookies

## Sessões 
- Sessões geralmente dependem de cookies, mas os dados são guardados no servidor. Funciona assim:
  - Uma sessão é iniciada no servidor, que envia um cookie ao browser com um ID único daquela sessão;
  - Qualquer dado associado à sessão é armazenado no servidor, associado a esse ID;
  - Em toda requisição, o browser envia de volta o cookie com o ID da sessão, o que permite ao servidor dar acesso aos dados associados àquele ID;
  - Portanto, usar sessões é um pouco mais seguro que guardar dados diretamente em cookies, já que se alguém tiver acesso ao cookies não tem acesso direto aos dados (isso sem falar que não cabem muitos dados no cookies)

## Middlewares
